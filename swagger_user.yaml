openapi: 3.0.0
info:
  title: User Authentication API
  description: API for user signup and login
  version: 1.0.0

servers:
  - url: http://localhost:3000/api

paths:
  /users/signup:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: Helsinki1!
                  description: Password must be strong (e.g., at least 8 characters, including uppercase, lowercase, number, and special character)
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: john.doe@example.com
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Password not strong enough"

  /users/login:
    post:
      summary: Authenticate a user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: Helsinki1!
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: john.doe@example.com
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid credentials"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT