openapi: 3.0.0
info:
  title: Todo Task API
  version: 1.0.0
  description: API documentation for TodoTask management
servers:
  - url: /api
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    TodoTask:
      type: object
      required:
        - title
        - description
        - dueDate
        - completed
      properties:
        _id:
          type: string
          description: ID of the task
          example: "60d5ecb74e4d7b2d1c5e1c2f"
        title:
          type: string
          description: Title of the task
          example: "Complete project proposal"
        description:
          type: string
          description: Description of the task
          example: "Write and review the project proposal for the new client"
        dueDate:
          type: string
          format: date
          description: Due date of the task
          example: "2023-07-15"
        completed:
          type: boolean
          description: Completion status of the task
          example: false
        user_id:
          type: string
          description: ID of the user who created the task
          example: "60d5ecb74e4d7b2d1c5e1c30"
    TodoTaskInput:
      type: object
      required:
        - title
        - description
        - dueDate
      properties:
        title:
          type: string
          description: Title of the task
          example: "Complete project proposal"
        description:
          type: string
          description: Description of the task
          example: "Write and review the project proposal for the new client"
        dueDate:
          type: string
          format: date
          description: Due date of the task
          example: "2023-07-15"
        completed:
          type: boolean
          description: Completion status of the task
          example: false
security:
  - bearerAuth: []
paths:
  /todotasks:
    get:
      summary: Get all TodoTasks
      tags:
        - TodoTasks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of todo tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoTask'
              example:
                - _id: "60d5ecb74e4d7b2d1c5e1c2f"
                  title: "Complete project proposal"
                  description: "Write and review the project proposal for the new client"
                  dueDate: "2023-07-15"
                  completed: false
                  user_id: "60d5ecb74e4d7b2d1c5e1c30"
                - _id: "60d5ecb74e4d7b2d1c5e1c31"
                  title: "Schedule team meeting"
                  description: "Arrange a team meeting to discuss project progress"
                  dueDate: "2023-07-10"
                  completed: true
                  user_id: "60d5ecb74e4d7b2d1c5e1c30"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Server Error"
    post:
      summary: Add a new TodoTask
      tags:
        - TodoTasks
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoTaskInput'
      responses:
        '201':
          description: The created todo task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoTask'
              example:
                _id: "60d5ecb74e4d7b2d1c5e1c2f"
                title: "Complete project proposal"
                description: "Write and review the project proposal for the new client"
                dueDate: "2023-07-15"
                completed: false
                user_id: "60d5ecb74e4d7b2d1c5e1c30"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Server Error"
  /todotasks/{id}:
    get:
      summary: Get a single TodoTask by ID
      tags:
        - TodoTasks
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the todo task
          example: "60d5ecb74e4d7b2d1c5e1c2f"
      responses:
        '200':
          description: The requested todo task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoTask'
              example:
                _id: "60d5ecb74e4d7b2d1c5e1c2f"
                title: "Complete project proposal"
                description: "Write and review the project proposal for the new client"
                dueDate: "2023-07-15"
                completed: false
                user_id: "60d5ecb74e4d7b2d1c5e1c30"
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "TodoTask not found"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Server Error"

    put:
      summary: Update a TodoTask by ID
      tags:
        - TodoTasks
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the todo task to update
          example: "60d5ecb74e4d7b2d1c5e1c2f"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoTaskInput'
      responses:
        '200':
          description: The updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoTask'
              example:
                _id: "60d5ecb74e4d7b2d1c5e1c2f"
                title: "Updated project proposal"
                description: "Write, review, and finalize the project proposal for the new client"
                dueDate: "2023-07-20"
                completed: true
                user_id: "60d5ecb74e4d7b2d1c5e1c30"
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "TodoTask not found"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Server Error"


    delete:
      summary: Delete a TodoTask by ID
      tags:
        - TodoTasks
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the todo task to delete
          example: "60d5ecb74e4d7b2d1c5e1c2f"
      responses:
        '204':
          description: No content, task deleted
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "TodoTask not found"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Server Error"
